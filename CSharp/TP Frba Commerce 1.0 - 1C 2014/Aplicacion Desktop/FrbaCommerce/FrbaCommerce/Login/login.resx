<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAyAOeLAADxPADzMgDyRwD0NAfyPQD0PgDzSADzUAD0SQD1QBPxMQD1Ug7zPxjyMwD2UwX2
        ShP0QBbyWQ31YiLyURr0WhL2Yx71WyX0UiH2XDL0Yyz1azT1ZC72bDb2ZTD3bT31c0P1bD/3dEX2bUD4
        dUr2e0X3g0v3fEf4hE34fVX2g1b3hFf4hV72i1n5hl/3jGH4jWL5jmj3k2z3jWn4lG74jnT3lWr6lnX4
        lnH5nHv3nHL6nXz5nYL3pH36noP5pX/7n4T6pon5rIX7p435por6rY76p5P5rYz7ro/7qJT6rpL7tpX7
        sJr6tpv7t6P6t5z8uKH7vqT7uKn5v6L8wKX8uar7wKv8wbL6wa/7x6z9wrD8yLf6yLP8wrH9ybj7ybX8
        0L370br9yr/80rv+zMP82cD+08f808T92sj91Mv82sz93M7+3dT93dD/39L+5Nn85NX+3uD85dr+5dv/
        5uL95+D+7uP+6Ob97uH/7+T/6ef+7+j/8O/98PD+8fP9+O3/+Pb98vH/8/r8+fT++ff+8/v9+vX/+vb/
        +/n///z/+/7//P//////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEAAAAh/hFDcmVhdGVkIHdpdGggR0lNUAAh+QQFCgD/ACwAAAAAMgAyAAAI
        /gAVCRxIsKDBgwgTKlzIsKHDhxAjGqwxo0WOMF7KGCIksSPBPRQMMDBgIMABDgsNeFSYhqRLlwpfrjxo
        5SVJBl0S2lQ5k+BOA4Z0/uypaOeBAymHrvxJ8g9DpRJ3WiCJ1OHOqDYVwSH5AeLVh18VdTHQ1WtWqzIJ
        8kAZ8ezTtAX7dHQbEyZRn3br5r1bFC5Cv3z7kkw6OPBAwAURB1YskPFdx46JQi5sODFlg3srN75smafm
        w5zxev4sWOjoz5lFnzY8OfTi1KBd840ceSls1ahvx5ZtW/fuyrU3+24bXDhvs8NVHy/4oQ1mum+LK2qx
        IIzy1dGTKzJBkofx5aZrQt9gCl4vdII1mUoOa7CK+tmOywTY2QQ4b0MHfsIgjTBOApf5uWQBfwhlQBUD
        FJhgAgp2EHgQEooYIpeDFFZooUQBAQAh+QQFCgD/ACwCAAAALQAyAAAI/gD/CRxIsCBBRTMMZJiiR5HB
        hwYVSZxIsWLFIgwYHIiRBqLHjx4d/itzwIABBRjQgHxosWVFQ0teMDBZ8oCdghNDurRo5QWIjCaDmmTy
        T6LAnBB3UsxhIIDQpwYYLEGKlKVSMRqelnzKgEOanSsLGrqhYebWqAZeYDjrxqWhQWEJ3nAalMGHHFoE
        uinJoIVLQYb8xP0nhonJf1FfGKoox8KBDH2U8mgR14LQDGIiGxU4aIOFvBEVvT3w4SbIJQwEGsjhxWWf
        FyZYDloscyaOj322MpihVJEeOSz9SHxhAPGJjzNmZjAxqLfSQgKZKDD5IsdmgmyKMzDjvLvEMCU//jB/
        +CFqicFh4WT8l5FOwSszDbhHv1IRBQMlwxS0nJZ+fUUbqMYDQUsogBgDfPi3kkyIHXCQgwzkoOBKdKR2
        AANwDMSDWROC5BAFDhoAGh8z/RNAEx2G9E9WiNFQ1D8mmDRBiiBtiJgBcOlhlgEd0QjRICEOUZQhjuHn
        o0c3pGbABg71QVMG1x05kBcQHiGQGUbiKKVBOCh5m2raDbjlUf/QoJ2EAhGHmAYvjvnPhgZYQJAWxR1A
        QZtbxkETmyKpB+F8Y26hkZEElcTeC27+84d2VxTEQ3ErsuHdpCXM9IFBWkygnZxHOiSGkmw8tIaFB1gp
        UocSZbUbS3ucgJ9JwIak6BBxNPVxUEUzSbWTHDh0p8dhUqm4xAEWSPbBHr1RcF9JAa5kiBw7pbGBAWHs
        RIMJg0a1RVxKMXFhC80VJVEfYqCmWoRwhTapHTiYtEGoiqRRxQfxFfdqrKcONKlEXZxlgJlB/RNiU2YA
        l9S+MwTg76tCBYBDE1HiNGkaUAXFF7EndIcexVDNZMEHWizmHX0Z1BvnC83tG/FKWXAg1AFViKsyfXv8
        g8YG8aGQ6EeKVNGCBRA0unNIUaBgGn0BAQAh+QQFCgD/ACwCAAAALgAyAAAI/gAVCRxIsKDBgwW9vPnH
        sKHDfwgjRnzIMAcPiBQbStyIsKGeAxrEZNTIkeAgRXpo2GlRpUWLI4YcLmFg4IiikRBLCuRhIIcBmgz+
        BWXAAMQLK/9a/JyhB6fOKxZoGphK1cC/qgEoSDWgJWZGjmw+0GRY9SfVA2UNHAiAwmnEPjOoMlhLgceB
        KSCs8FC6tewBODhHLjkwtKeeHDcPaslhoq/aMCMR0ggwlUEJOhsdmijLYFDgh3Y+UOWhU6CeDmp/Ulgy
        8SGOn0LvllYUprIBJob0lD5BdYah2X2UasBxhyPJDVIVMPlM0dCHG3Z0OhxkAe0ByMwpRi/dkA7Rnwzg
        /sweP7BhbbQUyJN/yHPqBvXwBaL9+SI+Rz4mjjiEM/cnnewAkpQDWjc1pMVUB1CQk30IVXZRTjRYZYAG
        CzJYUBMBXMUAHxANIhdpFiI0wVQmEDQEgp4FqGIaqTHQlEAbVHZDiAhZZ8FvAh1B0wFe0HhQBvP1kdNr
        QuGgoooe/oOWGQ3lINUMPhbEQ1BTMTTQAR+IF2V5GlD1gpUC4bGlQRTMp8WYEnmnVnhgolnQC1QeQJKb
        A7HR5VQPVhgRITnIEV9UV02gxZwRaYGCB3scmdMRB6DFwBoOScSHFqJ10Ad8CBpwwh4F6knQHENoQFQL
        6rmxWWUUHVTIHi1QNhViouOp+dMBS2AUmB0F7EgfeU40akB6B2Ukx3xVLSHGpRyJgVxlH/yWnRaOyfVB
        FWmEqQgdfejxgQktSMXABmG09hAVHERL7FQ0MCAWBWZVRmtmGdGRll/0EjsDshLhBOerJlS3I1mZAvUB
        G4o+BAiQBjQBkSGUWmCAAhQE4DAFYSxRxWyBhYHaGHoOMoQiVijyBnyfRSiGm5/JMQadzNHpckkBAQAh
        +QQFCgD/ACwDAAAALgAxAAAI/gAVCRxIsKDBgwgTKlzIsKHDhxAjSpy40IDFixgNUGSYsWPHjQY9ivwI
        cqRGgiYpiqzoUWJLhx7/yZS5p4bMgyQjdpyZhsKMmwVzusz4z4rFFv8UzZQpdKJIBjmADswIcqrHMFIV
        Ua1qNaOXrBi5DoRjIWOAMlKJLl3Ltu3MLh4PGEp7UawiHhgPXORAiK5Ft4Dd9uHw4YNevQxO2m3455+h
        LosbZo1MubLly5gza97MWaDMOIbKVLFyw0SLD5plJjgQAOOCNpExLs1wNXbdgUg88qAse6bWplzVyjR0
        QG9Y2xYL9kkMfKPwmRRWBj9O8J8Ji02aQ9y5VtF1GEy3NDoVXx2FBZTkH3JvayekdpzvE0qXHxOwwpTo
        RQZOytLkyP2T0edfbwDypx5+nSWo4IIMBgQAIfkEBQoA/wAsAAACADIALQAACP4A/wkcSLCgQYKK/iU8
        yLChQ4dm+hjS84/Pw4sYCcLR8sKARwsMTDDgoWhJxpMDE2rhcYCBRwMHYL5kcECBhSsoLybcs2aCxwME
        Y8b8Z0CgAQYf2GRUxLSpU6cnXA6M6TJDzAkBWr70OKNPzoNLpApkwICCBh6DEqb51+RfDgYdGfyjafLr
        QENCW2p4QQehQYt0Srg8akHMU6cOFckBCdOCUoULH5rJUNQAk8OYM5c0cMTuP5FEDdwwpLk0U0Oe/w2a
        8TLADdOwU7t9qcEw7Nu4nXqhPFdD7t+4xcj1mINpSuDIm/bpGNPAU4PJcxuSGsAKYoJp0kTH/eHlC4N7
        sv5QNjCjix3ZB5nmeAlCYUEOg7PiYKJ9O2YtNI+iJohma/MDG/AgB3oFzVRXQopssNVMBnyAA4EEdeTR
        C2UUMcM/VQy21QYthLFHZKn1MYgcbmAwk1aKtLCgR2wMAuE/erywgQUHNDdTBlFY0NhLNLgHoRwm0Lgi
        TFOgAAEKVbygIYgQapGBhjApEIMeduCk2k8GaPfiQH2oqCEGWgrElJAGVGFfaW7ABxMaB3Xn0QdnlpbG
        EkycJ6ZT+I3VR5zR4SWTbXwipyNRSwSa3AkBeMQADYYih8NLJjQKXBOJzkWBcaltZ4ZQFOghaW5yHOUd
        pjkx8cILaSFnyHrNIfcPHIZhKHDUATz4WFBpg0hlQG2H3boQU/nN9UELXyW0xQaDMVDCH1vE0RAdMlIA
        pZ2pLdHSXKLyQAMOXtwwCA8aSDvcPy2d8CCBfbBWFFWz0uQSUAK1ZMEGWwrExgfvFnWQjQykVe9AVxyg
        AWNQzspDGH0x+a9bOByxwRAG0KAFHAs3BGJCLqYWEAAh+QQFCgD/ACwAAAIAMgAuAAAI/gAVCRxIsKDB
        gwgTKly4cBDDhxAL5sBxZMMQAzS0wInIESGeAwwMhDRAUuQBHmHo/FP0r6XLly47EvxQsqaBAyUZOITJ
        s6XMgXBMMgB5syRICxt+cpyBw8uNQTw0UGAw8iaDEzh6an1JRYscO4U60nmxYWpNOwp70uEwtMCetC8F
        +lQ0lCSDDzS2wgT0QqTdFnN+/oMTRkHJAEsQvgyToSrJAEP46J3MZMbIA322yqHRAWdNnBq0KBVoyDOD
        GQdXjrFp866WyZOn8GDwzwCbrWLGNMlRM2RIFIRGCywR8oNBniZqvsjRooOHHMIV0bF7ZatACyWXrPzX
        Z4+c6Ipy/oS0UBBm6aJiwBvUc+AfAx5xCWoZyaCPeokBahtweJAmSeP3FUQBSdAhZIFnVQRYEA8l6XHQ
        IAb8g1MaChKEk3s0HDSEAvpVSNAUJaF10IAYeTgQCBEy0MJBVgRgFx4mKmIFbf8keBB2BgBoIoMirWjQ
        G0UxQEeMLUT4j48GDXgABfbB5iRPOR0xEExhjKTHk1i2NB9ODBii1RJW6RidIZm1xBtJIGzHUxUjmSBX
        ljzZ8UELYVyZHEkvxDcTSUhGdwNJHZgwUgBW6MWGXemBZ4cGrFEAm2UGJKUeDnXl1MISV2rVB5dODBnd
        HazZdUAOXnwZEkhuqAmnS0xUxaUBmxrw8EZCGxTl5pgkGuDiDEeIMVmVNUk5mh5LDHUAClo4qKpWH5h1
        kwW3rfTTIGHA8Y+Xeh5kiCI4HQCSBi94OmW2HOnFUrG9MUBBrPxR2MRoT57g2KsZ4DSBiwV2BBtLe6wx
        AUmeAVxUbQfwIdOTLGnBA1ECBxzSreWuCocWfZFkAQOC8qDIEcvuK5wZfRjioGSrlqwVSyyZ/E9AACH5
        BAUKAP8ALAEAAwAxAC4AAAj+AP8JHEjwnyKBfQwpQqKoocOHECNKdFiQoB0UJkxQYHDAgIEME0OKpFhx
        oAWPHjt6TBBnpEuIJQnCQEnzgMKJKF+SjCmwCU2PAcqE/KmT58CfKKsMRapzKVIDVpwSbQrxKcobI59S
        dYhUIA+PJl4ypdp1YJgFLYwSHCt26sM2H9Su/VlSotutVWm2zYkXJ82KEfX2lZpV8GC7fwnm9XhYpGHE
        jBv7jbzz32PJgVEq5soXM2QDk0F7/jx5tNOHc0Wbzqx68WrIqI9Sfs259cPOtBviTm179WPeuXXvlj37
        9eXbuE1fLnjc83LevSXTNdq88ebY0Pv2+dy75F2dHHhvMG/ufbpcg/8+GOhCPHnDmGxfqjcAx/L3yuOr
        S1R58v5e/Q79YZUBRhUW334qJXYefFpNZMhTcul04ENdMICUFWqR5R5ySKVRIF7RPcTBAQF4ZCEFe/CU
        GyGGlOFFGDm0MEMNKgZH1YI4xnSQUQEBACH5BAUKAP8ALAMAAAAtADIAAAj+AP8JHEiwIEE7KKIoMsiw
        ocOH/65AsNCiykKIGDMORGHAAIMNaP7t0ThQkcmTKFOi/FflQMeOHLKQFKiypspBLyy89Jhh5j+bNQ1p
        +aCTwc6XaWYCRXnCwgGjLo8iXarSockmOAIcjfryQIAZVKs2lGNGq4F/B/7tpLHzQJewKQ0uNGTApdqO
        DD5USbOQzYaOOOzAXWlwUA6jAhksEdPn5M9BLRgcYLJU4xajdRmYoAE0jIENfG3KMZTxr0sKFKju+cBj
        qdMlPx0uYXBXD1wccoDO9ihWYB+uL2L7JEi3roETey4WnGFUg8nhBRceOZCWwRqGbM4yECMcekELtA3+
        TNBi8IPHEoPTs9Eg0ACPglfC//H+8EX4tARdPt1C3yEd2k/BQdM/GkQVR38MLURBWgaQN1BR7yEoF4Fn
        GRCcQIepRUN3Eg7EQ3hnCYSDdjh0yNAgZ7lkhkBHAOiFidEpkkFUffz01z8M3ACjQfpZYMhCQ6Q4yI4E
        pWEcA3r8g6J2ERIp0AQdmRAbW2qxpxyMTQSgFgN8CKRFihRwCKNLDDQJh2Q40uHkPxkecKVdDFy4Ix+I
        KQCbhyFu8NyOL3RkQUGenXZlh3TgdUVB/9HGAAMCwliCUR+c6FRdYaQXlhnhsSGXIhtgpgBlltY0iAkZ
        eDTDQydU+MKeDMlh21KfzHV0QI0OjbjoqkuZ8EJjNXmRQ4iKYWTHBwcMspQWFmwwJE0m9SFGqS/9mVEL
        rQHVx4wW5IaSIfZVaAAT3G0aamR1ueFlDh9g1lEAOioFlBtdYdCnumRqcANpDYWaBgfqdnWUBmKEStVu
        Ur2kVQ5w+cREwYuC8IIV6flkh354vbDEj6EOhwYGCshaxoBrFhnDUwwUITCrSukxRalgQRcQACH5BAUK
        AP8ALAIAAAAuADIAAAj+ABUJHEiwoMGDCBMqXMhQ4L+HECM+bEjR4Bg5EjNW3KhIjAEaGSVyHPhGkRVF
        QwYV/DfGQIcwISFurLIkDAUDFgJQUIDzgxZDiv41MXAgA6CYSDOy+cDAQNMDBqI+hMrggAUTOaIyeIGU
        YZ8ZUYmKDTuWrFk6MRcuOdBUqwEKDJjSMAvVLAMOVEImDLOhLYMWJj7o6UNHER6BaaowNRuWgZakMg0t
        drpBTMM+YpYwPoBR48GbBw44GfniqdMCdiAHXeu3MMesUQO02FPoYMa2Bky4GamoBQMGGobMSShzz4mx
        vBX16WDAJx+FEdc8PXDEIeSMezyg0MIQopYJBv7+MbCQXJGcHIQaQuQRVgOb8hshQhX/An78f3CqOnVt
        v6KWqAdQ0N9Ch1n3Qnv/DHgQHB8cMNBDUjHAg4IGgeVUDhCZQdQ/Bgxy3Ych4cAAhzg41AeAGVBokBdU
        VSeQIRZA5aCKBN3Q1gYO6WFaGiD2CNEgdQ1BkAlRTUAjQTzgptI/fDT1TwBNHBmUBuF9ZF2SUUkZFAV1
        PSYTUTlY5+N1dDzFABwRHWHCc1qWBqCWCW0QFg8iwSkQaAbANJGdiuTX1G9o7UlRamP+E4aMFngoU0N2
        3PCBIWMywRNlYjJ0Bw5UttDHRoZYaMAJFelhCBNORRXGRlOwJZ4BOHh20BKbcInVgR4bsRfVB4R+OAhu
        UZkQ0UJ0lNBWADQgFNOhdmHFnUEJ5qBHViNWtcSYcNTFWFMt8GAFCKnyQEEAbIU1w6bExYQCuJs1ZhaE
        cb23UEyG/KfVt2RxyJhTFlxBEVJ6zIDtP1a8AMJv4q3aVFYTVtTVEU5NC5EhR7TQQhUt2EEDrSrdF5MY
        Ghygx6IUdvUPDxi6ah9kb3gBZ0AAIfkEBQoA/wAsAQABAC4AMQAACP4AFQkcSLCgwYMIEypcyLChw4cQ
        I0qcyNCAxYsYDUT8x7Gjx48ZQ4Z0+LEkR5EoRy406TGlRoIuFbI8KXIhSok1HeYkaGemyog/FVlA8e9g
        UKAZOcIwYEJRyaM4MzaxaKJowYwUr4qk8BRjVoMiGfTRavGrUYwHDhhq6dUsWa9sy7olyEMkEpgX5w4M
        IzJD3Jd62yzAGOBAAo56E35oYeKGlSplDMVBnLiy5cuYM2vezLnzQ8qeFXVZ+yf0QAMMDBxQ/eEDhz4z
        Y3eV6/QfIQ4XV1/kobdtbUO6M3aRTbwjVoEcywTIaAFOYt+1vex0exz5P77Ts1a3niN19qgYPzU6bWHR
        yj+oD6FynEEhjfHt6eFbr7EHJHqE3yvmx3tf/03++8XnUkrPDShfbzGZpuCCDIYWEAAh+QQFCgD/ACwA
        AAIAMgAtAAAI/gD/CRxIsKDBgooOKlx4MCHDf4bkKFJk6F9Chw8zatQDh0cMEzNy1OAxpM8/OBpTIvzH
        ZsqLFwcAGGBgQIGBAAY2aKDQhY9KjQ7TaMBJ88A/A0gPHEA688AHMRh/KtzTYgIDpUf/4aTAFKeBpQ0o
        3EgjVWGOFle/MrhKYcYSJkxy8MgxY0KADUQtPKFTlmCapV8NTECx5Agei4gvyhHDxsSBtTmtDCoL58iH
        tAw2mCEYFfHAPmI+IGWgAerE06gb/qPBNQCDJig7P/SSQa2SN6hzC8x92s6MGU1kp2zBFamFOLyT8zak
        vPlyNkofM3FOvW9BtEyhUN/OXbkeE2px/kjsTp77vxxMFfAoz367DrUf2stX7uWq0jDUmc+nTkcDTQPr
        pQZRGlEswcZ+1PUxA1IB8HDQGBzgpAEZCDo3Q1oZOJSQIWZ0wFRYL5Bl3UJp/HcAFP/UEQYcesTQQFKj
        fRCGHiMeZAcK/wH3ggE0LFEbYEwZYEELcwjXlyI7IrUTAxYokYGJSS2wwQctvFEjQX1MUVyQL/SxlgX/
        McBBF3TY4ceVE+WxxAsc/McUA1X888IRW7yQlglXEjQIFB88VlSQINAI0T9W/PfBZnkKpAUPIAAZ2AEi
        DoRFbUh5USFvZjjxAgVhcmBHQX2A8FUAOEyU6ECK0NEFDEi9MMWn8qiep8BSJvBxaXNspMGcQYpUwZQG
        +N2aHCKdoRaGfzMNAYew7c2w5RDMsqfHhf8wgEJw0ZK3hAn/3ZBteUXQxGQNZ1jH4X5o5ADmTQ6WpQcP
        G0AxnnzoIfVBFUZyNhAUM0SA0wZ05GuRclpc1lQMXyiyxm6eIYbHEU2Y4NVVcoy4Bw/IfsVmDmhUscca
        FTWxhLOPGXCUARy0O2KqxEG2lgYKiErBBksFkNVM/+DgRUV5DpIGeEEGndVSNH0wRMWnCtRHFSI0YAHO
        gc1kAAAHvIRi0gXp4YQVTGQAngVWofACDyxi/dBmaPDBBxp28MyQkQEBACH5BAkKAP8ALAAAAgAyAC0A
        AAj+AP8JHEiwoMF/ihAqWsiwocOHDQ9KNMhHkR5DfcxA3Lhx4sGERxTxYGCCgQUDKF9ogeNxIkeOJgww
        QGngQE2aDA7w0IKw5cCXG/nY/HfTJk2jE9bs6dkS6MYcBgJMqJlB5k2cJ3wKdMqxiaI0Cwfx0ECBwUyc
        S5hK5MqWIZ0XGnLaPKDIkFaBduGEGdTWoUA2FowyoPChKUI9WlAcOMBgiZ6+D4/QlBmmpZgjM6LSpGAI
        MkQT/2xu4PhmrFWjMpncXavITU6ZaQ96ycF48uQ7qyfSccIgdJ+Jepa0OIuSMQ7PGzfInAGxIAXbBjTY
        Qf5QzFk2Hq0EQEmyA8ob1B/+tkD54SHBFzRB6wnT4oOd3B8VxZRZ5eM/EDRzDOzTOXzDD6/F9tNChszE
        mBb+caQHd5URxNARxCXIUR8U2ETBRuOh1MJC8GlFh4EGvAHRcCjxICFHH6BkwUb1/cOAFSdChMdZAcAo
        Xm8GgBAjRDSgdCFEdtA0xY4PofSPAkPweBZdRDKUhgECGcDXQwuW2CRDVUB5wIpP+XjlQimS55dAg9AU
        QA5X9nEWAwhuNFJNjzUpRlH9bXQSA2gmKMcevyW0BE1cOtjQFWfRkWAOHnTQQg7opWfQQykyUEKChKBg
        FXEG5NDEGGIM2BAbUDLAwxQdEqQFgNBNNkZCEM2wpF2dpQqkhQZXHdUBDXJs9VAfgs3ARHh8DLHdZAxk
        0KCuDy0xrAEKhMEScnOQaNULgNxFA6o1McChQgW9tEcBjHFAR3wbBYkTBRu8YGhfhdghhxZUsMYRDie8
        xt1gGvAwyA1e4MDclwxtYIG9N+VksAFwhKeVIoOcFVqqBpRH3cL/0BEGD7URK9MBeAAMERxa9DjEBkfg
        kKfHHE3Z10QBAQA7
</value>
  </data>
</root>